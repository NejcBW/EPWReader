@page "/selector"

@inject EPWDB DataBase
@inject EPWDataFrameBuilder FrameBuilder
@using EPWDemo.EPWReader

<h1>Selector</h1>

<p>This page demonstrates fetching data from an epw weather file.</p>

@if (countryList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <label for="Country" class="control-label">Country</label>
        </div>
        <div class="col-md-4">
            <label for="Cities" class="control-label">Cities</label>
        </div>
    </div>
    <div class="row" style="padding-top:10px">
        <div class="col-md-4">
            <select class="form-control" @onchange="SelectedCountry">
                <option value="">-- Select Country --</option>
                @foreach (var country in countryList)
                {
                    <option value="@country">@country</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <select class="form-control" @onchange="SelectedCity">
                <option value="">-- Select City --</option>
                @foreach (var city in cityList)
                {
                    <option value="@city">@city</option>
                }
            </select>
        </div>
    </div>
    <div class="row" style="padding-top:10px">
        <button class="btn btn-primary" @onclick="LoadEpw">Click me</button>
    </div>

    <div class="row" style="padding-top:10px">
    </div>

    <p>City: @epw.Location.City</p>
    <p>Country: @epw.Location.Country</p>
    <p>Source: @epw.Location.Source</p>
    <p>File: @filename</p>

    <div class="row" style="padding-top:10px">
    </div>

    <table class="table">
        <thead>
            <tr>
                <th>Month</th>
                <th>Dry Bulb (C)</th>
                <th>Dew point (C)</th>
                <th>Relative hum. (%)</th>
                <th>Pressure (Pa)</th>
            </tr>
        </thead>
        <tbody>
            @if (epw != null)
            {
                @for (int i = 0; i < 12; i++)
                {
                    <tr>
                        <td>@(i + 1)</td>
                        <td>@epwMonthly.DryBulb[i]</td>
                        <td>@epwMonthly.DewPoint[i]</td>
                        <td>@epwMonthly.RelHum[i]</td>
                        <td>@epwMonthly.Pressure[i]</td>
                    </tr>
                }
            }
        </tbody>
    </table>

}

@code {
    List<string> countryList;
    List<string> cityList = new List<string>();

    string city;
    string filename;

    EPWDataFrame epw;
    EPWDataFrame epwMonthly;

    protected override void OnInitialized()
    {
        countryList = DataBase.GetCountryList();
        epw = FrameBuilder.Build(@"./Files/WAW.epw");
        epwMonthly = epw.MonthlyAverage();
    }

    void SelectedCountry(Microsoft.AspNetCore.Components.ChangeEventArgs countryEvent)
    {
        cityList = DataBase.GetCityList(countryEvent.Value.ToString());
    }

    void SelectedCity(Microsoft.AspNetCore.Components.ChangeEventArgs cityEvent)
    {
        city = cityEvent.Value.ToString();
    }

    void LoadEpw()
    {
        filename = DataBase.GetFileName(city);
        string path = @"./Files/" + filename;
        Console.WriteLine("loading file " + filename);

        if (!System.IO.File.Exists(path))
        {
            Console.WriteLine("File not found:\n" + path);
            epw = null;
            return;
        }

        epw = FrameBuilder.Build(path);
        epwMonthly = epw.MonthlyAverage();
    }
}
